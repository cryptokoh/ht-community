name: EAS Build

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for'
        required: true
        default: 'ios'
        type: choice
        options:
          - ios
          - android
          - all
      profile:
        description: 'Build profile'
        required: true
        default: 'development'
        type: choice
        options:
          - development
          - preview
          - production

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          
      - name: Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            
      - name: Setup Expo and EAS
        uses: expo/expo-github-action@v8
        with:
          expo-version: latest
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}
          
      - name: Install dependencies
        run: npm install --legacy-peer-deps
        
      - name: Run tests (if available)
        run: |
          if npm run | grep -q "test"; then
            npm test -- --passWithNoTests || true
          else
            echo "No test script found, skipping tests"
          fi
        
      - name: Run linting (if available)
        run: |
          if npm run | grep -q "lint"; then
            npm run lint || true
          else
            echo "No lint script found, skipping linting"
          fi
        
      - name: Run type checking (if available)
        run: |
          if npm run | grep -q "type-check"; then
            npm run type-check || true
          else
            echo "No type-check script found, skipping type checking"
          fi
      
      - name: Build with EAS
        id: eas-build
        run: |
          set -e
          echo "Starting EAS build for platform: ${{ inputs.platform }}, profile: ${{ inputs.profile }}"
          eas build --platform ${{ inputs.platform }} --profile ${{ inputs.profile }} --non-interactive
        
      - name: Notify on failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            const { platform, profile } = context.payload.inputs;
            const runUrl = `${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}`;
            
            // Create an issue on build failure
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `EAS Build Failed: ${platform} - ${profile}`,
              body: `## Build Failure Details\n\n` +
                    `- **Platform**: ${platform}\n` +
                    `- **Profile**: ${profile}\n` +
                    `- **Workflow Run**: [View Logs](${runUrl})\n` +
                    `- **Time**: ${new Date().toISOString()}\n\n` +
                    `Please check the logs for more details.`,
              labels: ['build-failure', 'eas']
            });
            
      - name: Post build summary
        if: always()
        run: |
          echo "## Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Platform: ${{ inputs.platform }}" >> $GITHUB_STEP_SUMMARY
          echo "- Profile: ${{ inputs.profile }}" >> $GITHUB_STEP_SUMMARY
          echo "- Status: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY